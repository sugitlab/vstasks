// Generated by Copilot
import * as vscode from "vscode";
import { ISavedQuery, SavedQueryManager } from "../models/saved-query-manager";

export class QueryTreeItem extends vscode.TreeItem {
  constructor(
    public readonly query: ISavedQuery,
    public readonly collapsibleState: vscode.TreeItemCollapsibleState = vscode
      .TreeItemCollapsibleState.None
  ) {
    super(query.label, collapsibleState);
    this.contextValue = "savedQuery";
    this.tooltip = query.query;
    this.command = {
      command: "vstasks.runSavedQuery",
      title: "Run Query",
      arguments: [query],
    };
  }
}

export class QueryTreeDataProvider
  implements vscode.TreeDataProvider<QueryTreeItem>
{
  private _onDidChangeTreeData = new vscode.EventEmitter<
    QueryTreeItem | undefined | void
  >();
  readonly onDidChangeTreeData = this._onDidChangeTreeData.event;

  constructor(private savedQueryManager: SavedQueryManager) {}

  refresh(): void {
    this._onDidChangeTreeData.fire();
  }

  getTreeItem(element: QueryTreeItem): vscode.TreeItem {
    return element;
  }

  getChildren(): QueryTreeItem[] {
    return this.savedQueryManager.getAll().map((q) => new QueryTreeItem(q));
  }
}
