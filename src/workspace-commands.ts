// Generated by Copilot
import * as vscode from "vscode";
import { WorkspaceTaskManager } from "./models/task-manager";

export class WorkspaceCommands {
  private taskManager: WorkspaceTaskManager;

  constructor(taskManager: WorkspaceTaskManager) {
    this.taskManager = taskManager;
  }

  public registerCommands(context: vscode.ExtensionContext): void {
    context.subscriptions.push(
      vscode.commands.registerCommand(
        "vstasks.refreshAllTasks",
        this.refreshAllTasks.bind(this)
      ),
      vscode.commands.registerCommand(
        "vstasks.exportTasks",
        this.exportTasks.bind(this)
      ),
      vscode.commands.registerCommand(
        "vstasks.importTasks",
        this.importTasks.bind(this)
      ),
      vscode.commands.registerCommand(
        "vstasks.showTaskStatistics",
        this.showTaskStatistics.bind(this)
      )
    );
  }

  public async refreshAllTasks(): Promise<void> {
    try {
      await this.taskManager.scanWorkspace();
      vscode.window.showInformationMessage("All tasks refreshed");
    } catch (err) {
      vscode.window.showErrorMessage(`Failed to refresh all tasks: ${err}`);
    }
  }

  public async exportTasks(): Promise<void> {
    try {
      // TODO: Implement export tasks
    } catch (err) {
      vscode.window.showErrorMessage(`Failed to export tasks: ${err}`);
    }
  }

  public async importTasks(): Promise<void> {
    try {
      // TODO: Implement import tasks
    } catch (err) {
      vscode.window.showErrorMessage(`Failed to import tasks: ${err}`);
    }
  }

  public async showTaskStatistics(): Promise<void> {
    try {
      // TODO: Implement show task statistics
    } catch (err) {
      vscode.window.showErrorMessage(`Failed to show task statistics: ${err}`);
    }
  }
}
